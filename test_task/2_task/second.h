#pragma once
/**
	Лебедюк Захар 2022 год
	Модуль разработан в рамках тестового задания для Caber Interactive.
*/
namespace t2 {
	/// <summary>
	///  Функция подсчета длины строки работающая на этапе компиляции
	/// </summary>
	/// <param name="start">
	///  - строка оканчивающаяся терминальным нулем. 
	/// </param>
	/// <returns> Длина строки до символа окончания </returns>
	constexpr size_t my_strlen(const char* start)
	{
		const char* end = start;
		for (; *end != '\0'; ++end)
			;
		return end - start;
	}

	/// <summary>
	///  Функция предназначена для удаления подряд идущих дублирующих символов.
	///  Не производит выделений памяти, на константных данных выполняется на этапе компиляции.
	/// </summary>
	/// <param name="str">
	///	 - строка оканчивающаяся терминальным нулем.
	/// </param>
	constexpr void remove_dups(char* str)
	{
		//  Нельзя переносить определение в .cpp файл, 
		//  так как для работы на этапе компиляции необходимо знать ее определение здесь и сейчас
		//  если перенести, то программа просто не слинкуется

		if (!str) return;

		size_t len = my_strlen(str);
		size_t cur = 0;
		char now_uniq = str[0];
		for (int i = 1; i < len; ++i)
		{
			// если встретили новый символ
			if (str[i] != now_uniq) {
				// обновляем отслеживаемый символ
				now_uniq = str[i];
				// записываем новый символ в след 
				// за последним уникальным символом строки 
				str[++cur] = now_uniq;
			}
		}

		str[cur + 1] = '\0';
	}

}